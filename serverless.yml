---
service: aws-lambda-edge

frameworkVersion: "^1.33.1"

plugins:
  - serverless-finch
  - serverless-plugin-cloudfront-lambda-edge

provider:
  name: aws
  runtime: nodejs8.10
  region: ${env:AWS_DEFAULT_REGION, 'us-east-1'}
  stage: ${opt:stage, env:SERVERLESS_STAGE, 'test'}

functions:
  app:
    handler: handlers/app
    lambdaAtEdge:
      distribution: AppDistribution
      eventType: origin-request

custom:
  org: immutablewebapps
  domain: ${self:service}.immutableweb.app
  appDomain: ${self:provider.stage}.${self:custom.domain}
  assetDomain: assets.${self:custom.domain}
  client:
    bucketName: ${self:custom.org}-${self:service}
    distributionFolder: .bucket
    objectHeaders:
      ALL_OBJECTS:
        - name: Cache-Control
          value: 'public, max-age=31536000, immutable'

package:
  exclude:
    - "*/**"
  include:
    - "handlers/*.js"

resources:
  Resources:
    AppBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.org}-${self:service}-${self:provider.stage}
    AppDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          PriceClass: PriceClass_100
          HttpVersion: http2
          ViewerCertificate:
            CloudFrontDefaultCertificate: true
          DefaultCacheBehavior:
            TargetOriginId: AppBucketOrigin
            ViewerProtocolPolicy: redirect-to-https
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: 'all'
          Origins:
            - Id: AppBucketOrigin
              DomainName: { 'Fn::GetAtt': [ 'AppBucket', 'DomainName' ] }
              S3OriginConfig: {}
    AssetDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          PriceClass: PriceClass_100
          HttpVersion: http2
          ViewerCertificate:
            CloudFrontDefaultCertificate: true
          DefaultCacheBehavior:
            TargetOriginId: AssetBucketOrigin
            ViewerProtocolPolicy: redirect-to-https
            Compress: true
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: 'none'
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            CachedMethods:
              - GET
              - HEAD
          Origins:
            - Id: AssetBucketOrigin
              DomainName: ${self:custom.client.bucketName}.s3.amazonaws.com
              S3OriginConfig: {}
